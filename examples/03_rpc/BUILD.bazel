# Copyright 2024 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load("@bazel_skylib//rules:native_binary.bzl", "native_binary")
load(
    "@pigweed//pw_protobuf_compiler:pw_proto_library.bzl",
    "pw_proto_filegroup",
    "pw_proto_library",
)
load("@pigweed//pw_system/py:console.bzl", "device_console", "device_simulator_console")
load("@pigweed//targets/host_device_simulator:transition.bzl", "host_device_simulator_binary")
load("@rules_python//python:proto.bzl", "py_proto_library")
load("//targets:transition.bzl", "rp2040_binary", "stm32_binary")

package(default_visibility = ["//visibility:public"])

pw_proto_filegroup(
    name = "rpc_example_protos_filegroup",
    srcs = ["rpc_example_protos/rpc_example_service.proto"],
    options_files = ["rpc_example_protos/rpc_example_service.options"],
)

proto_library(
    name = "rpc_example_protos",
    srcs = ["rpc_example_protos_filegroup"],
    strip_import_prefix = "/examples/03_rpc",
    deps = ["@pigweed//pw_protobuf:common_proto"],
)

pw_proto_library(
    name = "rpc_example_protos_cc",
    deps = [":rpc_example_protos"],
)

py_proto_library(
    name = "rpc_example_protos_py_pb2",
    tags = ["manual"],
    deps = [":rpc_example_protos"],
)

cc_library(
    name = "rpc_example_service_nanopb",
    srcs = ["rpc_example_service_nanopb.cc"],
    hdrs = ["public/rpc_example/rpc_example_service_nanopb.h"],
    includes = ["public"],
    deps = [
        ":rpc_example_protos_cc.nanopb_rpc",
        "@pigweed//pw_log",
        "@pigweed//pw_sync:mutex",
    ],
)

cc_binary(
    name = "rpc_main",
    srcs = ["main.cc"],
    deps = [
        ":rpc_example_service_nanopb",
        "@pigweed//pw_log",
        "@pigweed//pw_system",
    ],
)

stm32_binary(
    name = "stm32_rpc_main.elf",
    binary = ":rpc_main",
)

rp2040_binary(
    name = "rp2040_rpc_main.elf",
    binary = ":rpc_main",
)

native_binary(
    name = "flash_stm32",
    src = "//tools:flash_device",
    args = [
        "--device",
        "STM32-Discovery",
        "$(rootpath //examples/03_rpc:stm32_rpc_main.elf)",
    ],
    data = [":stm32_rpc_main.elf"],
)

device_console(
    name = "console_stm32",
    binary = ":stm32_rpc_main.elf",
    pw_console_config = "//:pw_console_config",
    script = "//tools:console",
)

device_console(
    name = "console_rp2040",
    binary = ":rp2040_rpc_main.elf",
    pw_console_config = "//:pw_console_config",
    script = "//tools:console",
)

# Create a host binary using the Pigweed upstream pw_system host_device_simulator.
host_device_simulator_binary(
    name = "simulator_rpc",
    binary = ":rpc_main",
)

# Start :simulator_rpc and connect to it with pw console by running:
#   bazel run //examples/03_rpc:simulator_console
device_simulator_console(
    name = "simulator_console",
    host_binary = ":simulator_rpc",
    pw_console_config = "//:pw_console_config",
    script = "//tools:device_sim",
)
